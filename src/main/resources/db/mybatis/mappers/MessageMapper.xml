<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.community.dao.MessageDao">
    <sql id="select">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insert">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <select id="selectConversations" resultType="com.github.community.entity.Message">
        select
        <include refid="select"/>
        from message
        where id in (
        select max(id)from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from
        (
        select max(id) as maxid from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )as m
    </select>
    <select id="selectLetters" resultType="com.github.community.entity.Message">
        select
        <include refid="select"/>
        from message
        where conversation_id = #{conversationId}
        and status != 2
        and from_id != 1
        order by id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectLetterCount" resultType="int">
        select count(*)
        from message
        where conversation_id = #{conversationId}
        and status != 2
        and from_id != 1
    </select>
    <select id="selectUnreadLetterCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <insert id="insertMessage" parameterType="com.github.community.entity.Message" keyProperty="id">
        insert into message(<include refid="insert"/>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectLetterById" resultType="com.github.community.entity.Message">
        select
        <include refid="select"/>
        from message
        where id = #{id}
    </select>
</mapper>